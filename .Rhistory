theme(axis.title.x=element_text(size=18,face="bold",family="Times"),
axis.title.y=element_text(size=18,face="bold",family="Times"),
axis.text=element_text(family="Times",size=14),
legend.title=element_text(face="bold",size=16,family="Times"),
legend.text=element_text(family="Times",size=12),
plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times")))
t = data %>%
filter(RequestType != 'NA') %>%
group_by(RequestType) %>%
summarise(ave = mean(handle), count = n())
t$aves = (t$ave-min(t$ave))/(max(t$ave)-min(t$ave))
t$counts = (t$count-min(t$count))/(max(t$count)-min(t$count))
t$RequestType = factor(t$RequestType, labels = c('bulky', 'deadAnimal', 'electronic', 'feedback', 'graffiti', 'homeless', 'dumping', 'appliance', 'streetlighM', 'other', 'water', 'streetlightS'))
(t1 = ggplot(t, aes(x = RequestType, y = aves, group = 1)) +
geom_line(size = 1, color = '#045a8d') +
geom_bar(aes(x = RequestType, y = counts), stat = 'identity',
fill = '#a6bddb', alpha = 0.4, color = '#a6bddb') +
theme(axis.text.y = element_blank()) +
ylab('Request number/handeling time') +
ggtitle('request number & handle time by RequestType') +
theme(axis.title.x=element_text(size=18,face="bold",family="Times"),
axis.title.y=element_text(size=18,face="bold",family="Times"),
axis.text=element_text(family="Times",size=14),
legend.title=element_text(face="bold",size=16,family="Times"),
legend.text=element_text(family="Times",size=12),
plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times")))
t = data %>%
filter(AssignTo != 'NA') %>%
group_by(AssignTo) %>%
summarise(ave = mean(handle), count = n())
t$aves = (t$ave-min(t$ave))/(max(t$ave)-min(t$ave))
t$counts = (t$count-min(t$count))/(max(t$count)-min(t$count))
(t1 = ggplot(t, aes(x = AssignTo, y = aves, group = 1)) +
geom_line(size = 1, color = '#045a8d') +
geom_bar(aes(x = AssignTo, y = counts), stat = 'identity',
fill = '#a6bddb', alpha = 0.4, color = '#a6bddb') +
ylab('Request number/handeling time') +
ggtitle('request number & handle time by AssignTo') +
theme(axis.title.x=element_text(size=18,face="bold",family="Times"),
axis.title.y=element_text(size=18,face="bold",family="Times"),
axis.text=element_text(family="Times",size=14),
legend.title=element_text(face="bold",size=16,family="Times"),
legend.text=element_text(family="Times",size=12),
plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times")))
t = data %>%
filter(RequestType %in% c('Bulky Items', 'Graffiti Removal')) %>%
group_by(RequestType, week) %>%
summarize(ave = mean(handle), count = n())
t$aves = (t$ave-min(t$ave))/(max(t$ave)-min(t$ave))
t$counts = (t$count-min(t$count))/(max(t$count)-min(t$count))
(t1 = ggplot(t, aes(x = week, y = aves)) +
geom_line(size = 1, color = '#045a8d') +
geom_area(aes(x = week, y = counts), fill = '#74a9cf', alpha = 0.4) +
scale_x_continuous(breaks = seq(0, 60, 20), labels = c('201508', '201512', '201605', '201609')) +
ylab('Request number/handeling time') +
xlab('') +
facet_wrap(~RequestType, nrow = 12, scale = 'free_y') +
ggtitle('request number&handle time by requestType') +
theme(axis.title.x=element_text(size=18,face="bold",family="Times"),
axis.title.y=element_text(size=18,face="bold",family="Times"),
axis.text=element_text(family="Times",size=14),
legend.title=element_text(face="bold",size=16,family="Times"),
legend.text=element_text(family="Times",size=12),
plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times")))
t = data %>%
filter(Owner %in% c('BOS', 'OCT')) %>%
group_by(Owner, week) %>%
summarize(ave = mean(handle), count = n())
t$aves = (t$ave-min(t$ave))/(max(t$ave)-min(t$ave))
t$counts = (t$count-min(t$count))/(max(t$count)-min(t$count))
(t1 = ggplot(t, aes(x = week, y = aves)) +
geom_line(size = 1, color = '#045a8d') +
geom_area(aes(x = week, y = counts), fill = '#74a9cf', alpha = 0.4) +
scale_x_continuous(breaks = seq(0, 60, 20), labels = c('201508', '201512', '201605', '201609')) +
ylab('Request number/handeling time') +
xlab('') +
facet_wrap(~Owner, nrow = 7, scale = 'free_y') +
ggtitle('request number&handle time by Owner') +
theme(axis.title.x=element_text(size=18,face="bold",family="Times"),
axis.title.y=element_text(size=18,face="bold",family="Times"),
axis.text=element_text(family="Times",size=14),
legend.title=element_text(face="bold",size=16,family="Times"),
legend.text=element_text(family="Times",size=12),
plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times")))
t = data %>%
filter(Owner %in% c('BOS', 'OCB')) %>%
group_by(Owner, week) %>%
summarize(ave = mean(handle), count = n())
t$aves = (t$ave-min(t$ave))/(max(t$ave)-min(t$ave))
t$counts = (t$count-min(t$count))/(max(t$count)-min(t$count))
(t1 = ggplot(t, aes(x = week, y = aves)) +
geom_line(size = 1, color = '#045a8d') +
geom_area(aes(x = week, y = counts), fill = '#74a9cf', alpha = 0.4) +
scale_x_continuous(breaks = seq(0, 60, 20), labels = c('201508', '201512', '201605', '201609')) +
ylab('Request number/handeling time') +
xlab('') +
facet_wrap(~Owner, nrow = 7, scale = 'free_y') +
ggtitle('request number&handle time by Owner') +
theme(axis.title.x=element_text(size=18,face="bold",family="Times"),
axis.title.y=element_text(size=18,face="bold",family="Times"),
axis.text=element_text(family="Times",size=14),
legend.title=element_text(face="bold",size=16,family="Times"),
legend.text=element_text(family="Times",size=12),
plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times")))
t = data %>%
filter(Owner != 'NA', RequestType %in% c('Feedback',
'Homeless Encampment',
'Multiple Streetlight Issue')) %>%
group_by(RequestType, Owner) %>%
summarise(ave = mean(handle), count = n())
t$aves = (t$ave-min(t$ave))/(max(t$ave)-min(t$ave))
t$counts = (t$count-min(t$count))/(max(t$count)-min(t$count))
(t1 = ggplot(t, aes(x = Owner, y = aves, group = 1)) +
geom_line(size = 1, color = '#045a8d') +
geom_bar(aes(x = Owner, y = counts), stat = 'identity',
fill = '#a6bddb', alpha = 0.4, color = '#a6bddb') +
theme(axis.text.x = element_blank()) +
ylab('Request number/handeling time') +
facet_wrap(~RequestType, nrow = 3) +
theme(axis.title.x=element_text(size=18,face="bold",family="Times"),
axis.title.y=element_text(size=18,face="bold",family="Times"),
axis.text=element_text(family="Times",size=14),
legend.title=element_text(face="bold",size=16,family="Times"),
legend.text=element_text(family="Times",size=12),
plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times")))
t = data %>%
filter(Owner != 'NA', RequestType %in% c('Feedback',
'Homeless Encampment',
'Multiple Streetlight Issue')) %>%
group_by(RequestType, Owner) %>%
summarise(ave = mean(handle), count = n())
t$aves = (t$ave-min(t$ave))/(max(t$ave)-min(t$ave))
t$counts = (t$count-min(t$count))/(max(t$count)-min(t$count))
(t1 = ggplot(t, aes(x = Owner, y = aves, group = 1)) +
geom_line(size = 1, color = '#045a8d') +
geom_bar(aes(x = Owner, y = counts), stat = 'identity',
fill = '#a6bddb', alpha = 0.4, color = '#a6bddb') +
ylab('Request number/handeling time') +
facet_wrap(~RequestType, nrow = 3) +
theme(axis.title.x=element_text(size=18,face="bold",family="Times"),
axis.title.y=element_text(size=18,face="bold",family="Times"),
axis.text=element_text(family="Times",size=14),
legend.title=element_text(face="bold",size=16,family="Times"),
legend.text=element_text(family="Times",size=12),
plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times")))
t = data %>%
filter(Owner %in% c('LADWP', 'BSS')) %>%
group_by(Owner, RequestType) %>%
summarise(ave = mean(handle), count = n())
t$aves = (t$ave-min(t$ave))/(max(t$ave)-min(t$ave))
t$counts = (t$count-min(t$count))/(max(t$count)-min(t$count))
levels(t$RequestType)
t$RequestType = factor(t$RequestType, labels = c('bulky', 'deadAnimal', 'electronic', 'feedback', 'graffiti', 'homeless', 'dumping', 'appliance', 'streetlighM', 'other', 'water', 'streetlightS'))
(t2 = ggplot(t, aes(x = RequestType, y = aves, group = 1)) +
geom_line(size = 1, color = '#045a8d') +
geom_bar(aes(x = RequestType, y = counts), stat = 'identity',
fill = '#a6bddb', alpha = 0.4, color = '#a6bddb') +
theme(axis.text.y = element_blank()) +
ylab('Request number/handeling time') +
ggtitle('request number & handle time by owner') +
facet_wrap(~Owner, nrow = 7, scale = 'free_y') +
theme(axis.title.x=element_text(size=18,face="bold",family="Times"),
axis.title.y=element_text(size=18,face="bold",family="Times"),
axis.text=element_text(family="Times",size=14),
legend.title=element_text(face="bold",size=16,family="Times"),
legend.text=element_text(family="Times",size=12),
plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times")))
t = data %>%
filter(Owner != 'NA') %>%
group_by(Owner, RequestType) %>%
summarise(ave = mean(handle), count = n())
t$aves = (t$ave-min(t$ave))/(max(t$ave)-min(t$ave))
t$counts = (t$count-min(t$count))/(max(t$count)-min(t$count))
levels(t$RequestType)
t$RequestType = factor(t$RequestType, labels = c('bulky', 'deadAnimal', 'electronic', 'feedback', 'graffiti', 'homeless', 'dumping', 'appliance', 'streetlighM', 'other', 'water', 'streetlightS'))
(t2 = ggplot(t, aes(x = RequestType, y = aves, group = 1)) +
geom_line(size = 1, color = '#045a8d') +
geom_bar(aes(x = RequestType, y = counts), stat = 'identity',
fill = '#a6bddb', alpha = 0.4, color = '#a6bddb') +
theme(axis.text.y = element_blank()) +
ylab('Request number/handeling time') +
ggtitle('request number & handle time by owner') +
facet_wrap(~Owner, nrow = 7, scale = 'free_y') +
theme(axis.title.x=element_text(size=18,face="bold",family="Times"),
axis.title.y=element_text(size=18,face="bold",family="Times"),
axis.text=element_text(family="Times",size=14),
legend.title=element_text(face="bold",size=16,family="Times"),
legend.text=element_text(family="Times",size=12),
plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times")))
populationmap = map +
stat_density2d(data = population, aes(x = lon, y = lat,
fill = ..level..),
geom = 'polygon', alpha = 0.5) +
scale_fill_gradient(low = 'white', high = '#bd0026') +
theme(legend.title = 'population density')
populationmap = map +
stat_density2d(data = population, aes(x = lon, y = lat,
fill = ..level..),
geom = 'polygon', alpha = 0.5) +
scale_fill_gradient(low = 'white', high = '#bd0026') +
theme(legend.title = element_text('population density'))
map +
stat_density2d(data = population, aes(x = lon, y = lat,
fill = ..level..),
geom = 'polygon', alpha = 0.5) +
scale_fill_gradient(low = 'white', high = '#bd0026') +
theme(legend.title = element_text('population density'))
map +
stat_density2d(data = population, aes(x = lon, y = lat,
fill = ..level..),
geom = 'polygon', alpha = 0.5) +
scale_fill_gradient(low = 'white', high = '#bd0026') +
guides(fill=guide_legend(title="population density"))
map +
stat_density2d(data = population, aes(x = lon, y = lat,
fill = ..level..),
geom = 'polygon', alpha = 0.5) +
scale_fill_gradient(low = 'white', high = '#bd0026', guide = F)
populationmap = map +
stat_density2d(data = population, aes(x = lon, y = lat,
fill = ..level..),
geom = 'polygon', alpha = 0.5) +
scale_fill_gradient(low = 'white', high = '#bd0026', guide = F)
incomemap = map +
stat_density2d(data = income, aes(x = lon, y = lat,
fill = ..level..),
geom = 'polygon', alpha = 0.7) +
scale_fill_gradient(low = 'white', high = '#006699', guide = F)
c = populationmap +
geom_point(data = datamap, aes(x = Longitude, y = Latitude),
color = '#2b8cbe', alpha = 1/40)
populationmap +
geom_point(data = datamap, aes(x = Longitude, y = Latitude),
color = '#2b8cbe', alpha = 1/20) +
facet_wrap(~RequestType, nrow = 3)
grid.arrange(c, populationmap, nrow = 1, top = '311 & population density')
b = incomemap +
geom_point(data = datamap, aes(x = Longitude, y = Latitude),
alpha = 1/70)
incomemap +
geom_point(data = datamap, aes(x = Longitude, y = Latitude),
alpha = 1/30) +
facet_wrap(~RequestType, nrow = 3)
grid.arrange(b, incomemap, nrow = 1, top = '311 & median income')
map +
geom_point(data = datamap, aes(x = Longitude, y = Latitude, color = CD),
alpha = 1/15) +
facet_wrap(~RequestType, nrow = 3)
map +
geom_point(data = datamap, aes(x = Longitude, y = Latitude, color = CD),
alpha = 1/20) +
geom_text(aes(label = CD))
map +
geom_point(data = datamap, aes(x = Longitude, y = Latitude, color = CD),
alpha = 1/20) +
geom_text(data = datamap, aes(label = CD))
map +
geom_point(data = datamap, aes(x = Longitude, y = Latitude, color = CD),
alpha = 1/20)
map +
geom_point(data = datamap, aes(x = Longitude, y = Latitude, color = CD),
alpha = 1/15) +
facet_wrap(~RequestType, nrow = 3) +
theme(legend.position = 'none')
a = datamap %>%
filter(RequestType == 'Feedback')
populationmap +
geom_point(data = a, aes(x = Longitude, y = Latitude),
color = '#2b8cbe', size = 7, alpha = 1/2) +
ggtitle('feedback')
a = datamap %>%
filter(RequestType == 'Feedback')
populationmap +
geom_point(data = a, aes(x = Longitude, y = Latitude),
color = '#2b8cbe', size = 7, alpha = 1/2) +
ggtitle('feedback') +
theme(axis.title.x=element_text(size=18,face="bold",family="Times"),
axis.title.y=element_text(size=18,face="bold",family="Times"),
axis.text=element_text(family="Times",size=14),
legend.title=element_text(face="bold",size=16,family="Times"),
legend.text=element_text(family="Times",size=12),
plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times")))
populationmap +
geom_point(data = a, aes(x = Longitude, y = Latitude),
color = '#2b8cbe', size = 7, alpha = 1/2) +
ggtitle('feedback') +
theme(axis.title.x=element_text(size=18,face="bold",family="Times"),
axis.title.y=element_text(size=18,face="bold",family="Times"),
axis.text=element_text(family="Times",size=14),
legend.title=element_text(face="bold",size=16,family="Times"),
legend.text=element_text(family="Times",size=12),
plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times"))
a = datamap %>%
filter(RequestType == 'Report Water Waste')
incomemap +
geom_point(data = a, aes(x = Longitude, y = Latitude),
size = 7, alpha = 1/6) +
ggtitle('Report Water Waste') +
theme(axis.title.x=element_text(size=18,face="bold",family="Times"),
axis.title.y=element_text(size=18,face="bold",family="Times"),
axis.text=element_text(family="Times",size=14),
legend.title=element_text(face="bold",size=16,family="Times"),
legend.text=element_text(family="Times",size=12),
plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times"))
a = datamap %>%
filter(RequestType == 'Single Streetlight Issue')
d = populationmap +
geom_point(data = a, aes(x = Longitude, y = Latitude, color = CD),
size = 3, alpha = 1/5) +
ggtitle('Single Streetlight Issue')
a = datamap %>%
filter(RequestType == 'Multiple Streetlight Issue')
e = populationmap +
geom_point(data = a, aes(x = Longitude, y = Latitude, color = CD),
size = 3, alpha = 1/3) +
ggtitle('Multiple Streetlight Issue')
grid.arrange(d, e, nrow = 1)
a = datamap %>%
filter(RequestType %in% c('Graffiti Removal',
'Homeless Encampment',
'Illegal Dumping Pickup'))
populationmap +
geom_point(data = a, aes(x = Longitude, y = Latitude, color = CD),
size = 3, alpha = 1/10) +
facet_wrap(~RequestType) +
ggtitle('Santa Monica beach')
a = datamap %>%
filter(RequestType %in% c('Metal/Household Appliances',
'Dead Animal Removal',
'Electronic Waste'))
populationmap +
geom_point(data = a, aes(x = Longitude, y = Latitude),
color = '#2b8cbe', alpha = 1/20) +
facet_wrap(~RequestType) +
ggtitle('Malibu')
populationmap +
geom_point(data = a, aes(x = Longitude, y = Latitude,
color = CD), alpha = 1/20) +
facet_wrap(~RequestType) +
ggtitle('Malibu')
populationmap +
geom_point(data = a, aes(x = Longitude, y = Latitude,
color = CD), alpha = 1/5) +
facet_wrap(~RequestType) +
ggtitle('Malibu')
a = datamap %>%
filter(RequestType %in% c('Graffiti Removal',
'Homeless Encampment',
'Illegal Dumping Pickup'))
populationmap +
geom_point(data = a, aes(x = Longitude, y = Latitude, color = CD),
size = 3, alpha = 1/5) +
facet_wrap(~RequestType) +
ggtitle('Santa Monica beach')
map +
geom_point(data = datamap, aes(x = Longitude, y = Latitude, color = CD),
alpha = 1/15) +
facet_wrap(~RequestType, nrow = 3) +
theme(legend.position = 'none') +
theme(axis.title.x=element_text(size=18,face="bold",family="Times"),
axis.title.y=element_text(size=18,face="bold",family="Times"),
axis.text=element_text(family="Times",size=14),
legend.title=element_text(face="bold",size=16,family="Times"),
legend.text=element_text(family="Times",size=12),
plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times"))
map +
geom_point(data = datamap, aes(x = Longitude, y = Latitude, color = CD),
alpha = 1/15) +
facet_wrap(~RequestType, nrow = 3) +
theme(legend.position = 'none') +
ggtitle('CD split map') +
theme(plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times"))
a = datamap %>%
filter(RequestType %in% c('Graffiti Removal',
'Homeless Encampment',
'Illegal Dumping Pickup'))
populationmap +
geom_point(data = a, aes(x = Longitude, y = Latitude, color = CD),
size = 3, alpha = 1/5) +
facet_wrap(~RequestType) +
ggtitle('Santa Monica beach') +
theme(plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times"))
a = datamap %>%
filter(RequestType %in% c('Metal/Household Appliances',
'Dead Animal Removal',
'Electronic Waste'))
populationmap +
geom_point(data = a, aes(x = Longitude, y = Latitude,
color = CD), alpha = 1/5) +
facet_wrap(~RequestType) +
ggtitle('Malibu') +
theme(plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times"))
a = datamap %>%
filter(RequestType %in% c('Metal/Household Appliances',
'Dead Animal Removal',
'Electronic Waste',
'Graffiti Removal',
'Homeless Encampment',
'Illegal Dumping Pickup',
'Bulky Items'))
populationmap +
geom_point(data = a, aes(x = Longitude, y = Latitude),
color = '#2b8cbe', alpha = 1/20) +
facet_wrap(~RequestType) +
ggtitle('Sunland-Tunjunga') +
theme(plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times"))
a = datamap %>%
filter(RequestType %in% c('Metal/Household Appliances',
'Dead Animal Removal',
'Electronic Waste',
'Illegal Dumping Pickup',
'Bulky Items',
'Single Streetlight Issue'))
populationmap +
geom_point(data = a, aes(x = Longitude, y = Latitude),
color = '#2b8cbe', alpha = 1/20) +
facet_wrap(~RequestType) +
ggtitle('Airport-Inglewood') +
theme(plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times"))
populationmap = map +
stat_density2d(data = population, aes(x = lon, y = lat,
fill = ..level..),
geom = 'polygon', alpha = 0.5) +
scale_fill_gradient(low = 'white', high = '#bd0026', guide = F) +
ggtitle('population contour')
map +
stat_density2d(data = population, aes(x = lon, y = lat,
fill = ..level..),
geom = 'polygon', alpha = 0.5) +
scale_fill_gradient(low = 'white', high = '#bd0026', guide = F) +
ggtitle('population contour') +
theme(plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times"))
incomemap = map +
stat_density2d(data = income, aes(x = lon, y = lat,
fill = ..level..),
geom = 'polygon', alpha = 0.7) +
scale_fill_gradient(low = 'white', high = '#006699', guide = F) +
ggtitle('income contour') +
theme(plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times"))
map +
stat_density2d(data = income, aes(x = lon, y = lat,
fill = ..level..),
geom = 'polygon', alpha = 0.7) +
scale_fill_gradient(low = 'white', high = '#006699', guide = F) +
ggtitle('income contour') +
theme(plot.title=element_text(size=22,lineheight=0.8,
face="bold",
margin=margin(10,0,10,0),
family = "Times"))
